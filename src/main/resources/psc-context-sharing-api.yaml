openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: Context sharing API backed on ProSanteConnect
    url: http://localhost:8080/psc-context-sharing/api
info:
  version: "1.0.0"
  title: Context sharing API backed on ProSanteConnect
  description: ""
paths:
  /discovery:
    get:
      summary: Get all registered schemas
      description: Returns all registered schemas
      operationId: get-all-schemas
      parameters:
        - schema:
            type: boolean
            default: false
          name: details
          in: query
          required: false
      responses:
        200:
          description: Schemas found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PsContextSchema'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
    post:
      summary: Post new json schema
      description: Post new json schema
      operationId: add-new-schema
      responses:
        201:
          description: New Json schema successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsContextSchema'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        409:
          description: Already exists
    put:
      summary: Update existing json schema
      description: Update existing json schema
      operationId: update-schema
      responses:
        200:
          description: Json schema successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsContextSchema'
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /discovery/{schemaId}:
    get:
      summary: Get specific schema
      description: Get specific schema
      parameters:
        - schema:
            type: string
          name: schemaId
          in: path
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsContextSchema'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        409:
          description: Already exists
  /share:
    put:
      summary: Put PsContext in cache
      description: Put PsContext in cache
      responses:
        200:
          description: Json schema successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsContext'
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /share/{psId}:
    get:
      summary: Get PsContext from cache
      description: Get PsContext from cache
      parameters:
        - schema:
            type: string
          name: psId
          in: path
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsContext'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
    put:
      summary: Put PsContext in cache
      description: Put PsContext in cache
      parameters:
        - schema:
            type: string
          name: psId
          in: path
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsContext'
        401:
          description: Unauthorized
        403:
          description: Forbidden
components:
  schemas:
    PsContext:
      description: PsContext wrapper
      type: object
      properties:
        schemaId:
          type: string
        bag:
          type: object
    PsContextSchema:
      description: psContext bag json-schema
      type: object
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: [ ]
